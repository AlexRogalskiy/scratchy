# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: ID!
  name: String!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  isEmailConfirmed: Boolean!
  lastLoginAt: DateTime
  roles: [Role]
  isActive: Boolean!
  name: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Cursor {
  beforeCursor: String
  afterCursor: String
}

type UserPaginatorResponse {
  cursor: Cursor!
  data: [User!]!
}

type TrackStatusResponse {
  number: Float!
  name: String!
  description: String!
  orderId: String!
  createdAt: DateTime!
  eventId: String!
}

type QuoteOrderResponse {
  orderToken: String!
  total: Float!
  subtotal: Float!
  fees: Float!
  tax: Float!
  shipping: Float!
}

type UploadDesignResponse {
  designId: String!
}

type OrderResponse {
  orderId: String!
  orderedAt: DateTime!
  total: Float!
  subtotal: Float!
  fees: Float!
  shipping: Float!
  tax: Float!
  orderToken: String!
  mode: String!
  status: String!
  items: [Item!]!
}

type Item {
  designId: String!
  type: String!
  status: String!
  designURL: String!
}

type CheckoutSessionResponse {
  sessionId: String!
}

type Query {
  me: User!
  user(email: String!): User!
  users(query: PaginatorInputs): UserPaginatorResponse!
  trackOrder(orderId: String!): [TrackStatusResponse!]!
}

input PaginatorInputs {
  afterCursor: String
  beforeCursor: String
  limit: Int
  order: Order
}

enum Order {
  ASC
  DESC
}

type Mutation {
  resentConfirmEmail(email: String!): Boolean!
  register(data: RegisterInput!): User!
  uploadDesign(artworkURL: String!, name: String!): UploadDesignResponse!
  quoteOrder(address: Address!, designId: String!): QuoteOrderResponse!
  submitOrder(orderToken: String!): OrderResponse!
  createCheckoutSession(productId: String!): CheckoutSessionResponse!
}

input RegisterInput {
  id: String
  firstName: String
  lastName: String
  email: String!
  password: String
}

input Address {
  name: String
  address1: String!
  address2: String
  city: String!
  state: String!
  zip: String!
}
